{{- range .Values.workers }}
{{- $worker := . -}}
{{- with $ }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: {{ $worker.name }}
    app.kubernetes.io/name: {{ $worker.name }}
    {{- range $key, $val := .Values.app.additionalLabels }}
    {{ $key }}: {{ $val }}
    {{- end}}
  name: {{ $worker.name }}
spec:
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ $worker.name }}
      app.kubernetes.io/name: {{ $worker.name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $worker.name }}
        app.kubernetes.io/name: {{ $worker.name }}
        {{- range $key, $val := .Values.app.additionalLabels }}
        {{ $key }}: {{ $val }}
        {{- end}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      containers:
      - args:
        - "source /vault-api-secrets/secrets/secret.env && \
           exec {{ if $.Values.newrelic.enabled }}newrelic-admin run-program{{ end }} \
           {{ regexReplaceAll "^\"|\"$" (quote $worker.command) "" }}"
        command:
        - /bin/bash
        - -c
        - --
        env:
        - name: {{  .Values.app.secret_file_env_name }}
          value: /vault-api-secrets/secrets/{{ .Values.app.secret_file_name }}
        - name: NEW_RELIC_APP_NAME
          valueFrom:
            configMapKeyRef:
              key: NEW_RELIC_APP_NAME
              name: app-cm
        - name: NEW_RELIC_LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              key: NEW_RELIC_LOG_LEVEL
              name: app-cm
        - name: NEW_RELIC_LICENSE_KEY
          value: Secret value filled in from secrets.env
        {{- range $env := .Values.app.extraEnvs }}
        - name: {{ $env.name }}
          value: {{ $env.value }}
        {{- end }}
        image: {{  .Values.app.image.repository }}:{{  .Values.app.image.tag }}
        imagePullPolicy: Always
        name: {{ $worker.name }}
        resources:
          limits:
            cpu: {{ (($worker.resources).limits).cpu | default "125m" }}
            memory: {{ (($worker.resources).limits).memory | default "2Gi" }}
          requests:
            cpu: {{ (($worker.resources).requests).cpu | default "25m" }}
            memory: {{ (($worker.resources).requests).memory | default "512Mi" }}
        volumeMounts:
        - mountPath: /vault-api-secrets/secrets
          name: vault-api-secrets
          readOnly: true
      initContainers:
      - env:
        - name: VAULT_ADDR
          valueFrom:
            configMapKeyRef:
              key: VAULT_ADDR
              name: app-cm
        - name: VAULT_ROLE
          valueFrom:
            configMapKeyRef:
              key: VAULT_ROLE
              name: app-cm
        - name: TOKEN_DEST_PATH
          value: /vault-auth-secrets/secrets/.vault-token
        - name: ACCESSOR_DEST_PATH
          value: /vault-auth-secrets/secrets/.vault-accessor
        image: edxops/vault-kubernetes-authenticator:latest
        imagePullPolicy: IfNotPresent
        name: vault-authenticator
        volumeMounts:
        - mountPath: /vault-auth-secrets/secrets
          name: vault-auth-secrets
      - command:
        - /bin/sh
        - -c
        - |
          set -xe
          /bin/consul-template -config /app-cm/vault.hcl -template "/app-cm/{{ .Values.app.secret_file_name }}:/vault-api-secrets/secrets/{{ .Values.app.secret_file_name }}" -once
          /bin/consul-template -config /app-cm/vault.hcl -template "/app-cm/secret.env:/vault-api-secrets/secrets/secret.env" -once
        env:
        - name: VAULT_ADDR
          valueFrom:
            configMapKeyRef:
              key: VAULT_ADDR
              name: app-cm
        image: hashicorp/consul-template:0.20.0-light
        imagePullPolicy: IfNotPresent
        name: secret-render
        volumeMounts:
        - mountPath: /vault-auth-secrets/secrets
          name: vault-auth-secrets
          readOnly: true
        - mountPath: /vault-api-secrets/secrets
          name: vault-api-secrets
        - mountPath: /app-cm
          name: app-cm
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsUser: 1000
      serviceAccountName: {{ .Values.app.service_account_name }}
      volumes:
      - emptyDir:
          medium: Memory
        name: vault-auth-secrets
      - emptyDir:
          medium: Memory
        name: vault-api-secrets
      - configMap:
          name: app-cm
        name: app-cm

{{ if .Values.app.autoscaling.enabled}}
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  labels:
    app.kubernetes.io/instance: {{ $worker.name }}
    app.kubernetes.io/name: {{ $worker.name }}
    {{- range $key, $val := .Values.app.additionalLabels }}
    {{ $key }}: {{ $val }}
    {{- end}}
  name: {{ $worker.name }}
spec:
  minReplicas: {{ $worker.minReplicas }}
  maxReplicas: {{ $worker.maxReplicas }}
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ $worker.name }}
  targetCPUUtilizationPercentage: {{ $worker.targetCPUUtilizationPercentage }}
  {{ end }}
  {{- end }}
  {{- end }}
